name: Build
on: [push]

env:
  IMAGE_NAME: ${{ github.repository }}
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure AWS credentials
        if: ${{ vars.ECR == 'true' && startsWith(github.ref, 'refs/tags/v') }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to AWS ECR
        if: ${{ vars.ECR == 'true' && startsWith(github.ref, 'refs/tags/v') }}
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        env:
          ECR_IMAGE_NAME: "${{ vars.ECR_IMAGE_NAME || env.IMAGE_NAME }}"
        with:
          images: |
            ghcr.io/${{ env.IMAGE_NAME }}
            ${{ steps.login-ecr.outputs.registry && format('{0}/{1}', steps.login-ecr.outputs.registry, env.ECR_IMAGE_NAME) || '' }}

      - name: Build and run tests
        uses: docker/build-push-action@v6
        with:
          push: false
          tags: ${{ github.repository }}-tests:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          target: tests

      - name: Build image
        uses: docker/build-push-action@v6
        with:
          push: ${{ startsWith(github.ref, 'refs/tags/v') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

